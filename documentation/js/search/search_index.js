var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.083,1,1.858]],["body/controllers/AppController.html",[0,1.768,1,3.033,2,1.437,3,0.52,4,0.448,5,0.448,6,3.274,7,0.64,8,0.039,9,0.954,10,2.611,11,3.274,12,0.52,13,0.026,14,2.811,15,1.762,16,0.032,17,0.032]],["title/modules/AppModule.html",[18,1.083,19,1.858]],["body/modules/AppModule.html",[1,2.787,2,1.417,3,0.371,4,0.319,5,0.319,7,0.689,8,0.039,9,0.68,10,2.595,11,2.334,12,0.371,13,0.018,16,0.025,17,0.025,18,1.625,19,3.572,20,1.256,21,1.256,22,1.561,23,1.561,24,1.256,25,2.475,26,1.561,27,2.334,28,2.334,29,2.334,30,2.595,31,2.9,32,2.334,33,2.159,34,1.561,35,1.397,36,2.835,37,2.772,38,2.835,39,2.835,40,2.835,41,2.835]],["title/injectables/AppService.html",[10,1.477,42,1.083]],["body/injectables/AppService.html",[3,0.498,4,0.428,5,0.428,7,0.498,8,0.038,9,0.912,10,2.345,12,0.498,13,0.025,16,0.031,17,0.031,42,1.72,43,2.094,44,3.132,45,0.818,46,2.345,47,5.445,48,1.123,49,3.804,50,1.874,51,1.72,52,1.874,53,3.804,54,3.804]],["title/controllers/AuthController.html",[0,1.083,55,1.858]],["body/controllers/AuthController.html",[0,1.413,2,1.413,3,0.511,4,0.44,5,0.44,7,0.633,8,0.038,9,0.938,12,0.511,13,0.025,15,1.733,16,0.031,17,0.031,55,3.002,56,3.219,57,2.764,58,3.219,59,2.331,60,3.219,61,3.91,62,2.152,63,2.424]],["title/modules/AuthModule.html",[18,1.083,30,1.477]],["body/modules/AuthModule.html",[2,1.524,3,0.413,4,0.355,5,0.355,7,0.663,8,0.038,9,0.756,12,0.413,13,0.02,16,0.027,17,0.027,18,1.524,20,1.398,21,1.398,22,1.736,23,1.736,24,1.398,25,2.615,26,2.321,30,2.736,32,1.398,33,2.321,34,1.736,35,1.554,37,2.229,55,2.944,59,2.58,60,2.596,64,2.596,65,2.596,66,2.596,67,3.154,68,3.154,69,3.154,70,2.596,71,3.154,72,3.154]],["title/injectables/AuthService.html",[42,1.083,59,1.329]],["body/injectables/AuthService.html",[3,0.355,4,0.306,5,0.306,7,0.498,8,0.039,9,0.651,12,0.355,13,0.018,15,1.203,16,0.025,17,0.025,42,1.375,43,1.494,45,0.584,46,1.875,48,1.297,50,1.875,51,2.026,52,1.875,59,1.686,62,2.094,63,1.683,73,2.235,74,2.86,75,3.919,76,3.805,77,2.235,78,2.177,79,2.714,80,2.094,81,2.094,82,1.123,83,1.686,84,2.714,85,2.714,86,3.805,87,2.723,88,3.616,89,2.714,90,1.919,91,2.235,92,2.714,93,2.235,94,2.235,95,2.714,96,1.919,97,1.683,98,2.714,99,2.714,100,2.235]],["title/classes/CreateMetaOptionsDto.html",[13,0.019,101,1.858]],["body/classes/CreateMetaOptionsDto.html",[3,0.456,4,0.392,5,0.392,7,0.456,8,0.038,12,0.456,13,0.029,16,0.029,17,0.029,45,0.749,48,1.329,51,1.626,82,1.329,101,2.79,102,1.543,103,3.525,104,3.525,105,2.867,106,1.994,107,4.105,108,3.525,109,1.994,110,2.867,111,3.483,112,3.267,113,3.483,114,3.181,115,1.716]],["title/classes/CreatePostDto.html",[13,0.019,116,1.65]],["body/classes/CreatePostDto.html",[3,0.177,4,0.152,5,0.152,7,0.514,8,0.039,12,0.177,13,0.018,16,0.014,17,0.014,45,0.29,48,1.37,51,1.866,82,1.524,83,2.153,100,2.716,101,2.045,102,0.598,103,3.361,104,1.575,106,1.26,107,2.341,108,1.575,109,2.056,112,2.263,114,2.581,115,0.665,116,1.226,117,1.112,118,3.006,119,2.843,120,2.843,121,3.235,122,2.843,123,3.651,124,3.651,125,2.341,126,3.651,127,2.341,128,3.006,129,1.35,130,1.35,131,2.228,132,2.228,133,1.35,134,1.35,135,1.35,136,3.299,137,1.834,138,1.834,139,2.228,140,1.35,141,1.35,142,1.35,143,1.35,144,1.35,145,3.299,146,1.834,147,1.35,148,1.35,149,1.35,150,1.35,151,1.35,152,3.299,153,3.299,154,2.228,155,2.228,156,2.228,157,2.228,158,2.228,159,1.35,160,3.006,161,1.35,162,2.219,163,2.228,164,2.843,165,1.35,166,1.35,167,2.228,168,1.35,169,1.35,170,3.299,171,1.35,172,1.35,173,1.35,174,2.843,175,1.35,176,2.228,177,2.228,178,3.422,179,2.228,180,1.35,181,1.35,182,2.228,183,0.955,184,1.35,185,1.35,186,0.955,187,1.35,188,3.006,189,3.422,190,0.665,191,1.35,192,1.35,193,1.35,194,1.35,195,1.35,196,1.35,197,1.816,198,1.35,199,1.35,200,1.112,201,1.35,202,1.381,203,2.228,204,1.112,205,1.35]],["title/classes/CreateUserDto.html",[13,0.019,206,1.65]],["body/classes/CreateUserDto.html",[3,0.395,4,0.34,5,0.34,7,0.395,8,0.038,12,0.395,13,0.026,16,0.026,17,0.026,45,0.649,48,1.471,51,2.019,82,1.471,88,3.824,90,3.283,102,1.338,106,1.814,109,2.207,110,3.824,112,3.227,114,3.521,115,1.487,206,2.253,207,4.286,208,2.133,209,3.824,210,4.645,211,3.018,212,3.018,213,3.018,214,3.018,215,3.018,216,4.093]],["title/classes/GetUsersParamDto.html",[13,0.019,217,1.65]],["body/classes/GetUsersParamDto.html",[3,0.424,4,0.365,5,0.365,7,0.63,8,0.038,12,0.424,13,0.031,16,0.028,17,0.028,45,0.697,48,0.957,82,1.422,83,1.903,87,3.306,97,2.662,102,1.436,106,1.903,109,1.436,115,1.597,128,2.668,178,3.535,183,2.291,189,3.535,190,1.597,202,2.009,217,2.364,218,3.535,219,2.662,220,2.668,221,2.985,222,4.294,223,3.241,224,3.241,225,3.535,226,3.241,227,2.668]],["title/classes/PatchPostDto.html",[13,0.019,228,1.858]],["body/classes/PatchPostDto.html",[3,0.43,4,0.37,5,0.37,7,0.634,8,0.038,12,0.43,13,0.028,16,0.028,17,0.028,45,0.707,48,0.971,82,0.971,87,3.321,102,1.457,106,1.921,109,1.457,112,2.686,115,1.619,116,1.809,162,1.619,186,2.323,188,3.568,190,1.619,197,2.386,221,2.686,225,3.568,228,2.686,229,3.568,230,2.706,231,3.568,232,4.334,233,3.287,234,4.334,235,3.287,236,3.287,237,2.706,238,2.706,239,2.706]],["title/classes/PatchUserDto.html",[13,0.019,240,1.858]],["body/classes/PatchUserDto.html",[3,0.52,4,0.448,5,0.448,7,0.64,8,0.038,12,0.52,13,0.026,16,0.032,17,0.032,102,1.762,186,2.811,206,2.189,208,2.811,231,4.028,237,3.274,240,3.033,241,3.274,242,4.893,243,3.274,244,3.274,245,3.274]],["title/controllers/PostsController.html",[0,1.083,246,1.858]],["body/controllers/PostsController.html",[0,0.723,2,0.723,3,0.262,4,0.225,5,0.225,7,0.579,8,0.039,9,0.48,12,0.262,13,0.013,15,0.887,16,0.02,17,0.02,45,0.431,46,1.5,48,1.088,50,1.816,51,1.332,52,0.986,57,1.415,62,1.102,63,1.241,74,2.819,80,2.029,81,2.029,82,1.088,83,1.633,109,1.633,116,2.569,125,2.507,162,2.029,190,0.986,197,2.752,228,2.553,238,1.648,239,2.507,246,1.888,247,1.648,248,2.002,249,3.045,250,3.045,251,3.045,252,2.002,253,3.045,254,3.045,255,2.152,256,4.118,257,3.045,258,4.118,259,4.118,260,2.002,261,2.002,262,3.045,263,2.002,264,3.045,265,2.002,266,2.507,267,2.002,268,2.507,269,3.045,270,3.39,271,2.002,272,2.002,273,3.045,274,1.648,275,1.648,276,2.507,277,1.5,278,1.648,279,3.034,280,3.034,281,1.648,282,1.648,283,1.648,284,2.002,285,2.002,286,2.002,287,2.002,288,2.002,289,2.002,290,2.002,291,2.002,292,3.045,293,2.002,294,2.002,295,2.002,296,1.648,297,2.002,298,2.002]],["title/modules/PostsModule.html",[18,1.083,31,1.65]],["body/modules/PostsModule.html",[2,1.528,3,0.414,4,0.357,5,0.357,7,0.664,8,0.038,9,0.76,12,0.414,13,0.02,16,0.027,17,0.027,18,1.72,20,1.404,21,1.404,22,1.744,23,1.744,24,1.404,25,2.621,26,1.744,31,3.109,32,2.413,33,2.328,34,1.744,35,1.561,37,2.989,70,2.608,246,2.951,277,2.683,278,2.608,299,2.608,300,3.168,301,2.608,302,3.168,303,3.168]],["title/injectables/PostsService.html",[42,1.083,277,1.477]],["body/injectables/PostsService.html",[3,0.372,4,0.32,5,0.32,7,0.514,8,0.039,9,0.683,12,0.372,13,0.018,14,2.012,15,1.262,16,0.025,17,0.025,42,1.421,43,1.567,45,0.612,46,1.938,48,1.161,50,1.402,51,1.628,52,1.402,62,1.567,74,2.48,77,2.344,78,2.109,80,2.165,81,2.165,82,1.161,83,1.743,93,2.344,94,3.238,96,2.012,97,3.351,118,4.001,127,3.238,266,2.344,277,1.938,304,2.344,305,3.238,306,2.847,307,3.238,308,3.933,309,2.847,310,2.847,311,3.933,312,2.847,313,2.847]],["title/controllers/UsersController.html",[0,1.083,314,1.858]],["body/controllers/UsersController.html",[0,0.578,2,0.578,3,0.209,4,0.18,5,0.18,7,0.556,8,0.038,9,0.384,12,0.209,13,0.01,14,1.131,15,0.709,16,0.017,17,0.017,45,0.344,46,1.26,48,1.077,50,1.797,51,0.924,52,2.095,57,1.131,74,2.805,78,1.277,80,1.758,81,2.008,82,1.255,83,1.415,109,1.616,137,2.629,138,2.629,162,1.797,190,0.788,197,2.195,202,1.979,204,2.105,206,2.34,217,2.008,219,2.472,221,3.103,227,1.317,240,2.873,245,2.105,255,1.807,270,1.317,274,1.317,275,2.105,276,2.629,279,2.105,280,2.105,281,1.317,282,1.317,283,1.317,296,2.105,314,1.585,315,1.317,316,2.557,317,3.647,318,3.193,319,2.557,320,1.6,321,1.6,322,3.193,323,1.6,324,1.6,325,3.5,326,3.154,327,1.6,328,1.6,329,2.557,330,2.557,331,1.6,332,2.557,333,2.557,334,1.6,335,2.557,336,2.557,337,2.557,338,3.647,339,1.6,340,2.557,341,2.557,342,1.6,343,1.6,344,2.105,345,1.6,346,1.6,347,1.6,348,3.193,349,1.6,350,1.6,351,1.6,352,1.317,353,1.317,354,1.317,355,3.193,356,1.6,357,1.6,358,1.6,359,1.6,360,1.317,361,1.6,362,1.6,363,1.6,364,1.6,365,1.6,366,1.6,367,1.6,368,1.6,369,1.6,370,1.6,371,1.6,372,1.6,373,1.6,374,1.6,375,1.6,376,1.6,377,1.6,378,1.6]],["title/modules/UsersModule.html",[18,1.083,32,1.329]],["body/modules/UsersModule.html",[2,1.524,3,0.413,4,0.355,5,0.355,7,0.663,8,0.038,9,0.756,12,0.413,13,0.02,16,0.027,17,0.027,18,1.717,20,1.398,21,1.398,22,1.736,23,1.736,24,1.398,25,2.615,26,2.615,30,1.554,32,2.461,33,2.321,34,1.736,35,1.554,78,2.344,91,2.596,314,2.944,354,2.596,379,2.596,380,2.596,381,2.596,382,3.154,383,3.154,384,3.154,385,3.154]],["title/injectables/UsersService.html",[42,1.083,78,1.199]],["body/injectables/UsersService.html",[3,0.284,4,0.244,5,0.244,7,0.506,8,0.039,9,0.52,12,0.284,13,0.021,15,0.961,16,0.021,17,0.021,42,0.784,43,1.194,45,0.466,46,1.594,48,1.142,50,1.594,51,1.658,52,1.594,58,1.786,59,1.9,62,1.78,63,1.344,74,2.648,75,1.786,78,1.293,80,2.129,81,2.129,82,1.142,83,1.714,87,2.843,90,3.031,96,1.533,97,2.658,209,3.53,217,2.36,219,2.658,221,3.089,305,3.184,307,1.786,325,3.184,326,2.734,344,2.663,352,1.786,353,1.786,386,1.786,387,3.234,388,2.169,389,2.169,390,2.169,391,2.169,392,3.234,393,3.234,394,3.234,395,2.169,396,3.234,397,2.663,398,2.169,399,2.169,400,2.169,401,1.786,402,2.169,403,2.169,404,2.169,405,2.169,406,2.169,407,2.169,408,2.169,409,2.169,410,2.169,411,2.169,412,2.169,413,2.169,414,2.169,415,2.169]],["title/coverage.html",[416,2.88]],["body/coverage.html",[0,1.726,1,1.696,5,0.308,6,2.252,8,0.038,10,1.348,13,0.034,16,0.025,17,0.025,24,1.212,42,1.726,44,2.252,55,1.696,56,2.252,59,1.212,73,2.252,78,1.094,82,0.808,101,1.696,103,2.704,104,1.934,105,2.252,116,1.506,117,2.252,200,2.252,206,1.506,207,2.252,208,2.704,217,1.506,218,2.252,219,1.696,220,2.252,228,1.696,229,2.252,230,2.252,240,1.696,241,2.252,246,1.696,247,2.252,255,1.934,277,1.348,304,2.252,314,1.696,315,2.252,386,2.252,401,2.252,416,1.934,417,2.252,418,2.736,419,5.771,420,4.777,421,4.411,422,3.825,423,2.252,424,2.736,425,2.736,426,2.736,427,2.736,428,2.736,429,3.825,430,2.736,431,2.736,432,2.736]],["title/dependencies.html",[21,1.596,433,2.068]],["body/dependencies.html",[8,0.039,9,0.907,13,0.031,16,0.031,17,0.031,21,1.677,115,1.864,183,2.674,190,1.864,243,3.115,244,3.115,434,3.783,435,3.783,436,5.183,437,3.783,438,3.783,439,3.783,440,3.783,441,3.783,442,3.783,443,3.783,444,3.783,445,3.783,446,3.783,447,3.783,448,3.783]],["title/miscellaneous/enumerations.html",[449,1.557,450,2.965]],["body/miscellaneous/enumerations.html",[8,0.038,16,0.03,17,0.03,45,0.784,108,4.112,121,3.815,146,3.815,160,3.815,197,2.551,326,3.276,449,2.26,450,3.001,451,3.646,452,3.646,453,3.646,454,4.634,455,4.634,456,4.634,457,3.646,458,4.634,459,4.634]],["title/miscellaneous/functions.html",[449,1.557,460,2.965]],["body/miscellaneous/functions.html",[8,0.034,16,0.034,17,0.034,24,2.467,45,0.959,423,3.669,449,2.762,460,3.669,461,4.456]],["title/index.html",[45,0.54,462,2.512,463,2.512]],["body/index.html",[4,0.25,8,0.037,16,0.021,17,0.021,35,2.135,162,1.092,202,2.429,268,1.825,360,2.707,397,1.825,416,1.567,417,1.825,464,2.217,465,2.217,466,3.918,467,2.217,468,2.217,469,2.217,470,2.217,471,2.217,472,2.217,473,3.918,474,2.217,475,2.217,476,2.217,477,4.334,478,2.217,479,5.019,480,2.217,481,5.019,482,2.217,483,2.217,484,2.217,485,3.288,486,2.217,487,2.217,488,2.217,489,3.918,490,2.217,491,3.288,492,2.217,493,2.217,494,2.217,495,4.334,496,2.217,497,2.217,498,2.217,499,2.217,500,2.217,501,4.334,502,3.288,503,2.217,504,3.918,505,2.217,506,3.568,507,3.288,508,2.217,509,2.217,510,2.217,511,2.217,512,2.217,513,2.217,514,3.918,515,2.217,516,2.217,517,2.217,518,2.217,519,2.217,520,2.217,521,3.918,522,2.217,523,2.217,524,2.217,525,2.217,526,2.217,527,2.217,528,3.288,529,2.217,530,2.217,531,2.217,532,2.217,533,2.217,534,3.288,535,2.217,536,2.217,537,2.217,538,3.288,539,3.288,540,2.217,541,2.217,542,2.217,543,2.217,544,2.217,545,2.217,546,2.217,547,2.217,548,2.217,549,2.217,550,2.217,551,1.825,552,2.217,553,2.217,554,2.217,555,2.217,556,2.217,557,2.217,558,1.825]],["title/modules.html",[20,1.806]],["body/modules.html",[8,0.032,16,0.032,17,0.032,19,2.552,20,1.824,30,2.028,31,2.266,32,1.824,506,4.607,559,5.597,560,5.597,561,5.597]],["title/overview.html",[562,3.355]],["body/overview.html",[2,1.054,8,0.037,10,2.249,16,0.026,17,0.026,18,1.054,19,3.526,20,1.293,21,1.293,22,1.606,23,1.606,24,1.293,25,1.606,26,1.606,27,2.402,28,2.402,29,2.402,30,2.618,31,2.996,32,2.412,33,2.202,34,1.606,35,1.437,43,1.606,59,2.412,64,2.402,65,2.402,66,2.402,78,2.176,102,1.293,277,2.249,299,2.402,301,2.402,379,2.402,380,2.402,381,2.402,562,2.402,563,4.564,564,2.918]],["title/properties.html",[106,1.596,433,2.068]],["body/properties.html",[8,0.038,16,0.034,17,0.034,106,1.938,162,2.154,551,3.6,558,3.6,565,4.373,566,4.373,567,4.373]]],"invertedIndex":[["",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateMetaOptionsDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0",{"_index":419,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":566,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":443,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":446,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":442,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":420,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":426,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":421,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":425,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":422,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":429,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":342,"title":{},"body":{"controllers/UsersController.html":{}}}],["1.1.23",{"_index":435,"title":{},"body":{"dependencies.html":{}}}],["1/3",{"_index":428,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":363,"title":{},"body":{"controllers/UsersController.html":{}}}],["10.0.0",{"_index":436,"title":{},"body":{"dependencies.html":{}}}],["10})@apiquery({name",{"_index":339,"title":{},"body":{"controllers/UsersController.html":{}}}],["1})@isoptional()@isint()@type(undefined",{"_index":223,"title":{},"body":{"classes/GetUsersParamDto.html":{}}}],["2.0.5",{"_index":438,"title":{},"body":{"dependencies.html":{}}}],["2/4",{"_index":431,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":270,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["201",{"_index":258,"title":{},"body":{"controllers/PostsController.html":{}}}],["232",{"_index":413,"title":{},"body":{"injectables/UsersService.html":{}}}],["33",{"_index":427,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":563,"title":{},"body":{"overview.html":{}}}],["50",{"_index":430,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":564,"title":{},"body":{"overview.html":{}}}],["7.3.0",{"_index":441,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":448,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":153,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["alez",{"_index":414,"title":{},"body":{"injectables/UsersService.html":{}}}],["alez@gmail.com",{"_index":415,"title":{},"body":{"injectables/UsersService.html":{}}}],["amazing",{"_index":544,"title":{},"body":{"index.html":{}}}],["api",{"_index":341,"title":{},"body":{"controllers/UsersController.html":{}}}],["apioperation",{"_index":279,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["apioperation({summary",{"_index":253,"title":{},"body":{"controllers/PostsController.html":{}}}],["apiproperty",{"_index":188,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/PatchPostDto.html":{}}}],["apiproperty()@isenum(posttype)@isnotempty",{"_index":143,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["apiproperty()@isstring()@isnotempty()@matches(/^[a",{"_index":151,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["apiproperty()@isstring()@minlength(4)@isnotempty",{"_index":172,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["apiproperty({description",{"_index":233,"title":{},"body":{"classes/PatchPostDto.html":{}}}],["apiproperty({enum",{"_index":161,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["apipropertyoptional",{"_index":189,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{}}}],["apipropertyoptional({description",{"_index":128,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{}}}],["apipropertyoptional({type",{"_index":135,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["apiquery",{"_index":355,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiresponse",{"_index":280,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["apitags",{"_index":281,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["apitags('posts",{"_index":286,"title":{},"body":{"controllers/PostsController.html":{}}}],["apitags('users",{"_index":357,"title":{},"body":{"controllers/UsersController.html":{}}}],["app.controller",{"_index":38,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":360,"title":{},"body":{"controllers/UsersController.html":{},"index.html":{}}}],["application'})@apiresponse({status",{"_index":331,"title":{},"body":{"controllers/UsersController.html":{}}}],["applications",{"_index":472,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":19,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":10,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["array",{"_index":136,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["auth",{"_index":58,"title":{},"body":{"controllers/AuthController.html":{},"injectables/UsersService.html":{}}}],["auth.controller",{"_index":69,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":41,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":55,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authmodule",{"_index":30,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":551,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":59,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["authservice:authservice",{"_index":406,"title":{},"body":{"injectables/UsersService.html":{}}}],["backers",{"_index":545,"title":{},"body":{"index.html":{}}}],["based",{"_index":333,"title":{},"body":{"controllers/UsersController.html":{}}}],["blog",{"_index":256,"title":{},"body":{"controllers/PostsController.html":{}}}],["board",{"_index":537,"title":{},"body":{"index.html":{}}}],["body",{"_index":274,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["boolean",{"_index":85,"title":{},"body":{"injectables/AuthService.html":{}}}],["bootstrap",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":561,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":559,"title":{},"body":{"modules.html":{}}}],["building",{"_index":467,"title":{},"body":{"index.html":{}}}],["business",{"_index":403,"title":{},"body":{"injectables/UsersService.html":{}}}],["channel",{"_index":509,"title":{},"body":{"index.html":{}}}],["check",{"_index":495,"title":{},"body":{"index.html":{}}}],["class",{"_index":13,"title":{"classes/CreateMetaOptionsDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateMetaOptionsDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":102,"title":{},"body":{"classes/CreateMetaOptionsDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":64,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":65,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":66,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_postsmodule",{"_index":299,"title":{},"body":{"modules/PostsModule.html":{},"overview.html":{}}}],["cluster_postsmodule_imports",{"_index":300,"title":{},"body":{"modules/PostsModule.html":{}}}],["cluster_postsmodule_providers",{"_index":301,"title":{},"body":{"modules/PostsModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":379,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":381,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":380,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["come",{"_index":498,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":434,"title":{},"body":{"dependencies.html":{}}}],["connect",{"_index":400,"title":{},"body":{"injectables/UsersService.html":{}}}],["console.log(createpostdto",{"_index":295,"title":{},"body":{"controllers/PostsController.html":{}}}],["console.log(createuserdto",{"_index":374,"title":{},"body":{"controllers/UsersController.html":{}}}],["console.log(isauth",{"_index":408,"title":{},"body":{"injectables/UsersService.html":{}}}],["console.log(patchpostsdto",{"_index":298,"title":{},"body":{"controllers/PostsController.html":{}}}],["const",{"_index":96,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{}}}],["constructor",{"_index":62,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{}}}],["constructor(authservice",{"_index":388,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(private",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{}}}],["constructor(usersservice",{"_index":77,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{}}}],["content",{"_index":118,"title":{},"body":{"classes/CreatePostDto.html":{},"injectables/PostsService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":61,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('posts",{"_index":285,"title":{},"body":{"controllers/PostsController.html":{}}}],["controller('users",{"_index":356,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["courses",{"_index":516,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":416,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":186,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{}}}],["created",{"_index":293,"title":{},"body":{"controllers/PostsController.html":{}}}],["created'})@post",{"_index":260,"title":{},"body":{"controllers/PostsController.html":{}}}],["createmetaoptionsdto",{"_index":101,"title":{"classes/CreateMetaOptionsDto.html":{}},"body":{"classes/CreateMetaOptionsDto.html":{},"classes/CreatePostDto.html":{},"coverage.html":{}}}],["createpost",{"_index":249,"title":{},"body":{"controllers/PostsController.html":{}}}],["createpost(@body",{"_index":294,"title":{},"body":{"controllers/PostsController.html":{}}}],["createpost(createpostdto",{"_index":252,"title":{},"body":{"controllers/PostsController.html":{}}}],["createpostdto",{"_index":116,"title":{"classes/CreatePostDto.html":{}},"body":{"classes/CreatePostDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"coverage.html":{}}}],["creates",{"_index":254,"title":{},"body":{"controllers/PostsController.html":{}}}],["createuserdto",{"_index":206,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/PatchUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["createusers",{"_index":316,"title":{},"body":{"controllers/UsersController.html":{}}}],["createusers(@body",{"_index":373,"title":{},"body":{"controllers/UsersController.html":{}}}],["createusers(createuserdto",{"_index":320,"title":{},"body":{"controllers/UsersController.html":{}}}],["database",{"_index":393,"title":{},"body":{"injectables/UsersService.html":{}}}],["date",{"_index":145,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["declarations",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":109,"title":{},"body":{"classes/CreateMetaOptionsDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["deeper",{"_index":511,"title":{},"body":{"index.html":{}}}],["defaultvaluepipe",{"_index":350,"title":{},"body":{"controllers/UsersController.html":{}}}],["defaultvaluepipe(1",{"_index":371,"title":{},"body":{"controllers/UsersController.html":{}}}],["defaultvaluepipe(10",{"_index":369,"title":{},"body":{"controllers/UsersController.html":{}}}],["defined",{"_index":48,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/CreateMetaOptionsDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":322,"title":{},"body":{"controllers/UsersController.html":{}}}],["deleted",{"_index":377,"title":{},"body":{"controllers/UsersController.html":{}}}],["deleteusers",{"_index":317,"title":{},"body":{"controllers/UsersController.html":{}}}],["dennis",{"_index":409,"title":{},"body":{"injectables/UsersService.html":{}}}],["dependecy",{"_index":287,"title":{},"body":{"controllers/PostsController.html":{}}}],["dependencies",{"_index":21,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":162,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{},"index.html":{},"properties.html":{}}}],["description:\"get",{"_index":226,"title":{},"body":{"classes/GetUsersParamDto.html":{}}}],["description:\"the",{"_index":367,"title":{},"body":{"controllers/UsersController.html":{}}}],["description:\"users",{"_index":362,"title":{},"body":{"controllers/UsersController.html":{}}}],["development",{"_index":482,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":522,"title":{},"body":{"index.html":{}}}],["discord",{"_index":508,"title":{},"body":{"index.html":{}}}],["dive",{"_index":510,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":417,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["draft",{"_index":454,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["draft','review','published",{"_index":195,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["draft','review','published''})@isenum(poststatus)@isnotempty",{"_index":165,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["dtos/create",{"_index":282,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["dtos/get",{"_index":352,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dtos/patch",{"_index":283,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["e2e",{"_index":492,"title":{},"body":{"index.html":{}}}],["each",{"_index":170,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["efficient",{"_index":468,"title":{},"body":{"index.html":{}}}],["email",{"_index":90,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/UsersService.html":{}}}],["enterprise",{"_index":527,"title":{},"body":{"index.html":{}}}],["entries",{"_index":335,"title":{},"body":{"controllers/UsersController.html":{}}}],["enum",{"_index":194,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["enumerations",{"_index":450,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/poststatus.enum",{"_index":184,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["enums/posttype.enum",{"_index":185,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["ere",{"_index":410,"title":{},"body":{"injectables/UsersService.html":{}}}],["example",{"_index":202,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{},"controllers/UsersController.html":{},"index.html":{}}}],["example:1",{"_index":227,"title":{},"body":{"classes/GetUsersParamDto.html":{},"controllers/UsersController.html":{}}}],["existing",{"_index":269,"title":{},"body":{"controllers/PostsController.html":{}}}],["experience",{"_index":513,"title":{},"body":{"index.html":{}}}],["export",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateMetaOptionsDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["exports:[authservice",{"_index":72,"title":{},"body":{"modules/AuthModule.html":{}}}],["express",{"_index":440,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":231,"title":{},"body":{"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{}}}],["false",{"_index":138,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/UsersController.html":{}}}],["featured",{"_index":131,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["featuredimageurl",{"_index":119,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["fetched",{"_index":332,"title":{},"body":{"controllers/UsersController.html":{}}}],["fetches",{"_index":328,"title":{},"body":{"controllers/UsersController.html":{}}}],["few",{"_index":496,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateMetaOptionsDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["find",{"_index":396,"title":{},"body":{"injectables/UsersService.html":{}}}],["findall",{"_index":305,"title":{},"body":{"injectables/PostsService.html":{},"injectables/UsersService.html":{}}}],["findall(getuserparamdto",{"_index":390,"title":{},"body":{"injectables/UsersService.html":{}}}],["findall(userid",{"_index":308,"title":{},"body":{"injectables/PostsService.html":{}}}],["findonebyid",{"_index":387,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebyid(id",{"_index":394,"title":{},"body":{"injectables/UsersService.html":{}}}],["firstname",{"_index":209,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/UsersService.html":{}}}],["follow",{"_index":530,"title":{},"body":{"index.html":{}}}],["forwardref",{"_index":91,"title":{},"body":{"injectables/AuthService.html":{},"modules/UsersModule.html":{}}}],["forwardref(()=>usersmodule",{"_index":71,"title":{},"body":{"modules/AuthModule.html":{}}}],["framework",{"_index":466,"title":{},"body":{"index.html":{}}}],["full",{"_index":526,"title":{},"body":{"index.html":{}}}],["function",{"_index":424,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":460,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get('/:id",{"_index":358,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('/:id?')@apioperation({summary",{"_index":327,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('/:userid",{"_index":264,"title":{},"body":{"controllers/PostsController.html":{}}}],["gethello",{"_index":47,"title":{},"body":{"injectables/AppService.html":{}}}],["getposts",{"_index":250,"title":{},"body":{"controllers/PostsController.html":{}}}],["getposts(@param('userid",{"_index":290,"title":{},"body":{"controllers/PostsController.html":{}}}],["getposts(userid",{"_index":263,"title":{},"body":{"controllers/PostsController.html":{}}}],["getting",{"_index":462,"title":{"index.html":{}},"body":{}}],["getuserparamdto",{"_index":344,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["getusers",{"_index":318,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusers(getuserparamdto",{"_index":324,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusersparamdto",{"_index":217,"title":{"classes/GetUsersParamDto.html":{}},"body":{"classes/GetUsersParamDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["graph",{"_index":518,"title":{},"body":{"index.html":{}}}],["grow",{"_index":541,"title":{},"body":{"index.html":{}}}],["hands",{"_index":512,"title":{},"body":{"index.html":{}}}],["handy",{"_index":499,"title":{},"body":{"index.html":{}}}],["headers",{"_index":349,"title":{},"body":{"controllers/UsersController.html":{}}}],["hello",{"_index":53,"title":{},"body":{"injectables/AppService.html":{}}}],["help",{"_index":524,"title":{},"body":{"index.html":{}}}],["here",{"_index":549,"title":{},"body":{"index.html":{}}}],["https://nestjs.com",{"_index":555,"title":{},"body":{"index.html":{}}}],["hyphens",{"_index":158,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["id",{"_index":87,"title":{},"body":{"injectables/AuthService.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":200,"title":{},"body":{"classes/CreatePostDto.html":{},"coverage.html":{}}}],["image",{"_index":132,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["import",{"_index":7,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateMetaOptionsDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{}}}],["imports:[forwardref(()=>authmodule",{"_index":385,"title":{},"body":{"modules/UsersModule.html":{}}}],["index",{"_index":45,"title":{"index.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/CreateMetaOptionsDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateMetaOptionsDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["inject",{"_index":92,"title":{},"body":{"injectables/AuthService.html":{}}}],["inject(forwardref",{"_index":95,"title":{},"body":{"injectables/AuthService.html":{}}}],["inject(forwardref(()=>authservice",{"_index":405,"title":{},"body":{"injectables/UsersService.html":{}}}],["injectable",{"_index":42,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectable,forwardref,inject",{"_index":398,"title":{},"body":{"injectables/UsersService.html":{}}}],["injectables",{"_index":43,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injecting",{"_index":94,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{}}}],["injection",{"_index":288,"title":{},"body":{"controllers/PostsController.html":{}}}],["installcompile",{"_index":480,"title":{},"body":{"index.html":{}}}],["interact",{"_index":519,"title":{},"body":{"index.html":{}}}],["isarray",{"_index":174,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isauth",{"_index":75,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["isemail",{"_index":216,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isenum",{"_index":175,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isenum(poststatus",{"_index":196,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isenum(posttype",{"_index":192,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isint",{"_index":225,"title":{},"body":{"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{}}}],["isiso8601",{"_index":176,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isjson",{"_index":177,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isnotempty",{"_index":112,"title":{},"body":{"classes/CreateMetaOptionsDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"classes/PatchPostDto.html":{}}}],["isnotempty()@isemail",{"_index":211,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isoptional",{"_index":178,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{}}}],["isstring",{"_index":114,"title":{},"body":{"classes/CreateMetaOptionsDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{}}}],["isstring()@isnotempty",{"_index":110,"title":{},"body":{"classes/CreateMetaOptionsDto.html":{},"classes/CreateUserDto.html":{}}}],["isurl",{"_index":179,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["items",{"_index":139,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["job",{"_index":534,"title":{},"body":{"index.html":{}}}],["jobs",{"_index":536,"title":{},"body":{"index.html":{}}}],["join",{"_index":547,"title":{},"body":{"index.html":{}}}],["joshua",{"_index":411,"title":{},"body":{"injectables/UsersService.html":{}}}],["joshua@gmail.com",{"_index":412,"title":{},"body":{"injectables/UsersService.html":{}}}],["kamil",{"_index":552,"title":{},"body":{"index.html":{}}}],["key",{"_index":107,"title":{},"body":{"classes/CreateMetaOptionsDto.html":{},"classes/CreatePostDto.html":{}}}],["lastname",{"_index":210,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["learn",{"_index":503,"title":{},"body":{"index.html":{}}}],["legend",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["letters",{"_index":156,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["license",{"_index":558,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":539,"title":{},"body":{"index.html":{}}}],["limit",{"_index":325,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["linkedin",{"_index":532,"title":{},"body":{"index.html":{}}}],["list",{"_index":329,"title":{},"body":{"controllers/UsersController.html":{}}}],["login",{"_index":76,"title":{},"body":{"injectables/AuthService.html":{}}}],["login(email",{"_index":86,"title":{},"body":{"injectables/AuthService.html":{}}}],["looking",{"_index":533,"title":{},"body":{"index.html":{}}}],["loop",{"_index":529,"title":{},"body":{"index.html":{}}}],["matches",{"_index":180,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["matches(/^[a",{"_index":193,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["matching",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateMetaOptionsDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["message",{"_index":154,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["meta",{"_index":104,"title":{},"body":{"classes/CreateMetaOptionsDto.html":{},"classes/CreatePostDto.html":{},"coverage.html":{}}}],["metadata",{"_index":445,"title":{},"body":{"dependencies.html":{}}}],["metaoptions",{"_index":120,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["method",{"_index":392,"title":{},"body":{"injectables/UsersService.html":{}}}],["methods",{"_index":46,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["minlength",{"_index":181,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["minlength(3",{"_index":198,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["minlength(4",{"_index":191,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["miscellaneous",{"_index":449,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["mit",{"_index":538,"title":{},"body":{"index.html":{}}}],["mode",{"_index":485,"title":{},"body":{"index.html":{}}}],["module",{"_index":18,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["module,forwardref",{"_index":68,"title":{},"body":{"modules/AuthModule.html":{}}}],["modules",{"_index":20,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":504,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":553,"title":{},"body":{"index.html":{}}}],["name",{"_index":81,"title":{},"body":{"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["name:'page",{"_index":364,"title":{},"body":{"controllers/UsersController.html":{}}}],["need",{"_index":523,"title":{},"body":{"index.html":{}}}],["needs",{"_index":234,"title":{},"body":{"classes/PatchPostDto.html":{}}}],["nest",{"_index":473,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":557,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":501,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":437,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":243,"title":{},"body":{"classes/PatchUserDto.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":439,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":190,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["new",{"_index":255,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["node.js",{"_index":465,"title":{},"body":{"index.html":{}}}],["npm",{"_index":479,"title":{},"body":{"index.html":{}}}],["number",{"_index":221,"title":{},"body":{"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["object",{"_index":199,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["offer",{"_index":535,"title":{},"body":{"index.html":{}}}],["official",{"_index":514,"title":{},"body":{"index.html":{}}}],["open",{"_index":540,"title":{},"body":{"index.html":{}}}],["operation",{"_index":404,"title":{},"body":{"injectables/UsersService.html":{}}}],["option",{"_index":201,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["optional",{"_index":83,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["options.dtos",{"_index":187,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["options.dtos.ts",{"_index":105,"title":{},"body":{"classes/CreateMetaOptionsDto.html":{},"coverage.html":{}}}],["options.dtos.ts:6",{"_index":111,"title":{},"body":{"classes/CreateMetaOptionsDto.html":{}}}],["options.dtos.ts:9",{"_index":113,"title":{},"body":{"classes/CreateMetaOptionsDto.html":{}}}],["out",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":562,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":433,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":326,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["param",{"_index":275,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["parameters",{"_index":80,"title":{},"body":{"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["params.dto",{"_index":353,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["params.dto.ts",{"_index":220,"title":{},"body":{"classes/GetUsersParamDto.html":{},"coverage.html":{}}}],["params.dto.ts:13",{"_index":224,"title":{},"body":{"classes/GetUsersParamDto.html":{}}}],["parseintpipe",{"_index":348,"title":{},"body":{"controllers/UsersController.html":{}}}],["part",{"_index":525,"title":{},"body":{"index.html":{}}}],["partialtype",{"_index":237,"title":{},"body":{"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{}}}],["partialtype(createpostdto",{"_index":232,"title":{},"body":{"classes/PatchPostDto.html":{}}}],["partialtype(createuserdto",{"_index":242,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["pass",{"_index":205,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["passed",{"_index":167,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["password",{"_index":88,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{}}}],["patch",{"_index":276,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["patchpostdto",{"_index":228,"title":{"classes/PatchPostDto.html":{}},"body":{"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"coverage.html":{}}}],["patchpostsdto",{"_index":273,"title":{},"body":{"controllers/PostsController.html":{}}}],["patchuserdto",{"_index":240,"title":{"classes/PatchUserDto.html":{}},"body":{"classes/PatchUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["patchusers",{"_index":319,"title":{},"body":{"controllers/UsersController.html":{}}}],["patchusers(@body",{"_index":378,"title":{},"body":{"controllers/UsersController.html":{}}}],["patchusers(patchuserdto",{"_index":345,"title":{},"body":{"controllers/UsersController.html":{}}}],["per",{"_index":337,"title":{},"body":{"controllers/UsersController.html":{}}}],["perform",{"_index":402,"title":{},"body":{"injectables/UsersService.html":{}}}],["please",{"_index":507,"title":{},"body":{"index.html":{}}}],["position",{"_index":340,"title":{},"body":{"controllers/UsersController.html":{}}}],["possible",{"_index":163,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post",{"_index":197,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{},"miscellaneous/enumerations.html":{}}}],["post'})@apiresponse({status",{"_index":257,"title":{},"body":{"controllers/PostsController.html":{}}}],["post'})@isiso8601()@isoptional",{"_index":147,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post'})@isoptional()@isjson",{"_index":149,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post'})@isoptional()@isurl",{"_index":133,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post'})@isstring()@isoptional",{"_index":129,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto",{"_index":284,"title":{},"body":{"controllers/PostsController.html":{}}}],["post.dto.ts",{"_index":230,"title":{},"body":{"classes/PatchPostDto.html":{},"coverage.html":{}}}],["post.dto.ts:11",{"_index":236,"title":{},"body":{"classes/PatchPostDto.html":{}}}],["post.dtos",{"_index":238,"title":{},"body":{"classes/PatchPostDto.html":{},"controllers/PostsController.html":{}}}],["post.dtos.ts",{"_index":117,"title":{},"body":{"classes/CreatePostDto.html":{},"coverage.html":{}}}],["post.dtos.ts:108",{"_index":142,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dtos.ts:24",{"_index":173,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dtos.ts:29",{"_index":144,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dtos.ts:37",{"_index":159,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dtos.ts:45",{"_index":166,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dtos.ts:52",{"_index":130,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dtos.ts:59",{"_index":150,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dtos.ts:66",{"_index":134,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dtos.ts:73",{"_index":148,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dtos.ts:82",{"_index":171,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["posts",{"_index":248,"title":{},"body":{"controllers/PostsController.html":{}}}],["posts.controller",{"_index":303,"title":{},"body":{"modules/PostsModule.html":{}}}],["posts/posts.module",{"_index":40,"title":{},"body":{"modules/AppModule.html":{}}}],["postscontroller",{"_index":246,"title":{"controllers/PostsController.html":{}},"body":{"controllers/PostsController.html":{},"modules/PostsModule.html":{},"coverage.html":{}}}],["postservice",{"_index":289,"title":{},"body":{"controllers/PostsController.html":{}}}],["postsmodule",{"_index":31,"title":{"modules/PostsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PostsModule.html":{},"modules.html":{},"overview.html":{}}}],["postsservice",{"_index":277,"title":{"injectables/PostsService.html":{}},"body":{"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"coverage.html":{},"overview.html":{}}}],["poststatus",{"_index":160,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["posttype",{"_index":121,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["prefix",{"_index":57,"title":{},"body":{"controllers/AuthController.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["private",{"_index":63,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/UsersService.html":{}}}],["production",{"_index":487,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":464,"title":{},"body":{"index.html":{}}}],["project",{"_index":477,"title":{},"body":{"index.html":{}}}],["properties",{"_index":106,"title":{"properties.html":{}},"body":{"classes/CreateMetaOptionsDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"properties.html":{}}}],["providers",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["providers/auth.service",{"_index":60,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["providers/posts.service",{"_index":278,"title":{},"body":{"controllers/PostsController.html":{},"modules/PostsModule.html":{}}}],["providers/users.service",{"_index":354,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["public",{"_index":74,"title":{},"body":{"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["published",{"_index":146,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["publishedon",{"_index":122,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["put",{"_index":347,"title":{},"body":{"controllers/UsersController.html":{}}}],["query",{"_index":338,"title":{},"body":{"controllers/UsersController.html":{}}}],["query'})@apiquery({name",{"_index":334,"title":{},"body":{"controllers/UsersController.html":{}}}],["query('limit",{"_index":368,"title":{},"body":{"controllers/UsersController.html":{}}}],["query('page",{"_index":370,"title":{},"body":{"controllers/UsersController.html":{}}}],["questions",{"_index":505,"title":{},"body":{"index.html":{}}}],["read",{"_index":548,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["real",{"_index":520,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":444,"title":{},"body":{"dependencies.html":{}}}],["registered",{"_index":330,"title":{},"body":{"controllers/UsersController.html":{}}}],["repository",{"_index":476,"title":{},"body":{"index.html":{}}}],["request",{"_index":376,"title":{},"body":{"controllers/UsersController.html":{}}}],["required",{"_index":137,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/UsersController.html":{}}}],["required:false",{"_index":366,"title":{},"body":{"controllers/UsersController.html":{}}}],["reset",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resources",{"_index":497,"title":{},"body":{"index.html":{}}}],["response",{"_index":259,"title":{},"body":{"controllers/PostsController.html":{}}}],["results",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateMetaOptionsDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["return",{"_index":52,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["returned",{"_index":336,"title":{},"body":{"controllers/UsersController.html":{}}}],["returns",{"_index":50,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["review",{"_index":456,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["run",{"_index":481,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":447,"title":{},"body":{"dependencies.html":{}}}],["sample",{"_index":99,"title":{},"body":{"injectables/AuthService.html":{}}}],["scalable",{"_index":469,"title":{},"body":{"index.html":{}}}],["scheduled",{"_index":455,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["schema",{"_index":123,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["sent",{"_index":375,"title":{},"body":{"controllers/UsersController.html":{}}}],["series",{"_index":459,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["server",{"_index":470,"title":{},"body":{"index.html":{}}}],["service",{"_index":307,"title":{},"body":{"injectables/PostsService.html":{},"injectables/UsersService.html":{}}}],["setup",{"_index":478,"title":{},"body":{"index.html":{}}}],["side",{"_index":471,"title":{},"body":{"index.html":{}}}],["sidebarenabled",{"_index":203,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["slug",{"_index":124,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["small",{"_index":155,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateMetaOptionsDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["specific",{"_index":222,"title":{},"body":{"classes/GetUsersParamDto.html":{}}}],["sponsors",{"_index":543,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":461,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../poststatus.enum.ts",{"_index":451,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../posttype.enum.ts",{"_index":452,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.module.ts",{"_index":36,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":44,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":49,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":56,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.module",{"_index":384,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/auth/auth.module.ts",{"_index":67,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/providers/auth.service",{"_index":399,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/auth/providers/auth.service.ts",{"_index":73,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/providers/auth.service.ts:12",{"_index":89,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/providers/auth.service.ts:16",{"_index":84,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/providers/auth.service.ts:5",{"_index":79,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/main.ts",{"_index":423,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/posts/dtos/create",{"_index":103,"title":{},"body":{"classes/CreateMetaOptionsDto.html":{},"classes/CreatePostDto.html":{},"coverage.html":{}}}],["src/posts/dtos/patch",{"_index":229,"title":{},"body":{"classes/PatchPostDto.html":{},"coverage.html":{}}}],["src/posts/enums/poststatus.enum.ts",{"_index":453,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/posts/enums/posttype.enum.ts",{"_index":457,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/posts/posts.controller.ts",{"_index":247,"title":{},"body":{"controllers/PostsController.html":{},"coverage.html":{}}}],["src/posts/posts.controller.ts:15",{"_index":265,"title":{},"body":{"controllers/PostsController.html":{}}}],["src/posts/posts.controller.ts:26",{"_index":261,"title":{},"body":{"controllers/PostsController.html":{}}}],["src/posts/posts.controller.ts:38",{"_index":272,"title":{},"body":{"controllers/PostsController.html":{}}}],["src/posts/posts.module.ts",{"_index":302,"title":{},"body":{"modules/PostsModule.html":{}}}],["src/posts/providers/posts.service.ts",{"_index":304,"title":{},"body":{"injectables/PostsService.html":{},"coverage.html":{}}}],["src/posts/providers/posts.service.ts:10",{"_index":309,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/posts/providers/posts.service.ts:5",{"_index":306,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/users/dtos/create",{"_index":207,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dtos/get",{"_index":218,"title":{},"body":{"classes/GetUsersParamDto.html":{},"coverage.html":{}}}],["src/users/dtos/patch",{"_index":241,"title":{},"body":{"classes/PatchUserDto.html":{},"coverage.html":{}}}],["src/users/providers/users.service",{"_index":93,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{}}}],["src/users/providers/users.service.ts",{"_index":386,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/providers/users.service.ts:14",{"_index":391,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:37",{"_index":395,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:6",{"_index":389,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.controller.ts",{"_index":315,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:48",{"_index":343,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:57",{"_index":321,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:64",{"_index":323,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:69",{"_index":346,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module",{"_index":70,"title":{},"body":{"modules/AuthModule.html":{},"modules/PostsModule.html":{}}}],["src/users/users.module.ts",{"_index":382,"title":{},"body":{"modules/UsersModule.html":{}}}],["start",{"_index":483,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":486,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":488,"title":{},"body":{"index.html":{}}}],["started",{"_index":463,"title":{"index.html":{}},"body":{}}],["starter",{"_index":475,"title":{},"body":{"index.html":{}}}],["statements",{"_index":418,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":125,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/PostsController.html":{}}}],["status:200",{"_index":361,"title":{},"body":{"controllers/UsersController.html":{}}}],["stay",{"_index":528,"title":{},"body":{"index.html":{}}}],["story",{"_index":458,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["string",{"_index":51,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/CreateMetaOptionsDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["successfully",{"_index":296,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["successfully'})@patch",{"_index":271,"title":{},"body":{"controllers/PostsController.html":{}}}],["summary",{"_index":292,"title":{},"body":{"controllers/PostsController.html":{}}}],["summary:\"fetches",{"_index":359,"title":{},"body":{"controllers/UsersController.html":{}}}],["support",{"_index":506,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":560,"title":{},"body":{"modules.html":{}}}],["table",{"_index":401,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":432,"title":{},"body":{"coverage.html":{}}}],["tags",{"_index":126,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["test",{"_index":491,"title":{},"body":{"index.html":{}}}],["test1",{"_index":311,"title":{},"body":{"injectables/PostsService.html":{}}}],["test12",{"_index":312,"title":{},"body":{"injectables/PostsService.html":{}}}],["test2",{"_index":313,"title":{},"body":{"injectables/PostsService.html":{}}}],["test:covresources",{"_index":494,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":493,"title":{},"body":{"index.html":{}}}],["tests",{"_index":489,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":542,"title":{},"body":{"index.html":{}}}],["this.authservice.isauth",{"_index":407,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.postservice.findall(userid",{"_index":291,"title":{},"body":{"controllers/PostsController.html":{}}}],["this.usersservice.findall(getuserparamdto",{"_index":372,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findonebyid('120",{"_index":98,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.findonebyid(userid",{"_index":310,"title":{},"body":{"injectables/PostsService.html":{}}}],["time",{"_index":521,"title":{},"body":{"index.html":{}}}],["title",{"_index":127,"title":{},"body":{"classes/CreatePostDto.html":{},"injectables/PostsService.html":{}}}],["touch",{"_index":550,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":183,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{},"dependencies.html":{}}}],["true",{"_index":100,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreatePostDto.html":{}}}],["true})@minlength(3",{"_index":169,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["true})@type(undefined",{"_index":141,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["twitter",{"_index":556,"title":{},"body":{"index.html":{}}}],["type",{"_index":82,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateMetaOptionsDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["type:\"number",{"_index":365,"title":{},"body":{"controllers/UsersController.html":{}}}],["types",{"_index":244,"title":{},"body":{"classes/PatchUserDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":474,"title":{},"body":{"index.html":{}}}],["undefined})@isoptional()@isarray()@validatenested({each",{"_index":140,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["unit",{"_index":490,"title":{},"body":{"index.html":{}}}],["unlicensed",{"_index":567,"title":{},"body":{"properties.html":{}}}],["updated",{"_index":239,"title":{},"body":{"classes/PatchPostDto.html":{},"controllers/PostsController.html":{}}}],["updated'})@isint()@isnotempty",{"_index":235,"title":{},"body":{"classes/PatchPostDto.html":{}}}],["updatepost",{"_index":251,"title":{},"body":{"controllers/PostsController.html":{}}}],["updatepost(@body",{"_index":297,"title":{},"body":{"controllers/PostsController.html":{}}}],["updatepost(patchpostsdto",{"_index":267,"title":{},"body":{"controllers/PostsController.html":{}}}],["updates",{"_index":268,"title":{},"body":{"controllers/PostsController.html":{},"index.html":{}}}],["use",{"_index":157,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["user",{"_index":97,"title":{},"body":{"injectables/AuthService.html":{},"classes/GetUsersParamDto.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{}}}],["user.dto",{"_index":245,"title":{},"body":{"classes/PatchUserDto.html":{},"controllers/UsersController.html":{}}}],["user.dto.ts",{"_index":208,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/PatchUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:13",{"_index":212,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:17",{"_index":215,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:5",{"_index":213,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:9",{"_index":214,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["userid",{"_index":266,"title":{},"body":{"controllers/PostsController.html":{},"injectables/PostsService.html":{}}}],["users",{"_index":219,"title":{},"body":{"classes/GetUsersParamDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["users.controller",{"_index":383,"title":{},"body":{"modules/UsersModule.html":{}}}],["users/users.module",{"_index":39,"title":{},"body":{"modules/AppModule.html":{}}}],["userscontroller",{"_index":314,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":32,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":78,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":397,"title":{},"body":{"injectables/UsersService.html":{},"index.html":{}}}],["validatenested",{"_index":182,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["validationpipe",{"_index":351,"title":{},"body":{"controllers/UsersController.html":{}}}],["validator",{"_index":115,"title":{},"body":{"classes/CreateMetaOptionsDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"dependencies.html":{}}}],["value",{"_index":108,"title":{},"body":{"classes/CreateMetaOptionsDto.html":{},"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["values",{"_index":164,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["values'})@isoptional()@isarray()@isstring({each",{"_index":168,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["version",{"_index":565,"title":{},"body":{"properties.html":{}}}],["video",{"_index":515,"title":{},"body":{"index.html":{}}}],["visit",{"_index":502,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":517,"title":{},"body":{"index.html":{}}}],["void",{"_index":262,"title":{},"body":{"controllers/PostsController.html":{}}}],["want",{"_index":204,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/UsersController.html":{}}}],["watch",{"_index":484,"title":{},"body":{"index.html":{}}}],["website",{"_index":554,"title":{},"body":{"index.html":{}}}],["working",{"_index":500,"title":{},"body":{"index.html":{}}}],["world",{"_index":54,"title":{},"body":{"injectables/AppService.html":{}}}],["x",{"_index":531,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":546,"title":{},"body":{"index.html":{}}}],["z0",{"_index":152,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["zoom",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nPostsModule\n\nPostsModule\n\nAppModule -->\n\nPostsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            PostsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { UsersModule } from './users/users.module';\nimport { PostsModule } from './posts/posts.module';\nimport { AuthModule } from './auth/auth.module';\n\n@Module({\n  imports: [UsersModule, PostsModule, AuthModule],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { AuthService } from './providers/auth.service';\n\n\n@Controller('auth')\nexport class AuthController {\n    constructor( private readonly authService: AuthService,) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService \n\nAuthService \n\n\n\nAuthModule\n\nAuthModule\n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module,forwardRef } from '@nestjs/common';\nimport { AuthController } from './auth.controller';\n\nimport { UsersModule } from 'src/users/users.module';\nimport { AuthService } from './providers/auth.service';\n\n@Module({\n  controllers: [AuthController],\n  providers: [AuthService],\n  imports: [forwardRef(()=>UsersModule)],\n  exports:[AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/providers/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isAuth\n                            \n                            \n                                    Public\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/providers/auth.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isAuth\n                        \n                    \n                \n            \n            \n                \n                        \n                    isAuth()\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/auth.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(email: string, id: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/auth.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, forwardRef, Inject } from '@nestjs/common';\nimport { UsersService } from 'src/users/providers/users.service';\n\n@Injectable()\nexport class AuthService {\n  // injecting usersService\n\n  constructor(\n    @Inject(forwardRef(() => UsersService))\n    private readonly usersService: UsersService,\n  ) {}\n  public login(email: string, id: string, password: string) {\n    const user = this.usersService.findOneById('120');\n    return 'Sample';\n  }\n  public isAuth() {\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateMetaOptionsDto.html":{"url":"classes/CreateMetaOptionsDto.html","title":"class - CreateMetaOptionsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateMetaOptionsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/dtos/create-meta-Options.dtos.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                key\n                            \n                            \n                                    \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-meta-Options.dtos.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-meta-Options.dtos.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\n\nexport class CreateMetaOptionsDto {\n  @IsString()\n  @IsNotEmpty()\n  key: string;\n\n  @IsNotEmpty()\n  value: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePostDto.html":{"url":"classes/CreatePostDto.html","title":"class - CreatePostDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePostDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/dtos/create-post.dtos.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                content\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                featuredImageUrl\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                metaOptions\n                            \n                            \n                                    \n                                    \n                                    \n                                postType\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                publishedOn\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                schema\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                slug\n                            \n                            \n                                    \n                                    \n                                    \n                                status\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                tags\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'This is the content for the post'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dtos.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        featuredImageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'This is featured image for the post'})@IsOptional()@IsUrl()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dtos.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        metaOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateMetaOptionsDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: 'array', required: false, items: undefined})@IsOptional()@IsArray()@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dtos.ts:108\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        postType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         postType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsEnum(postType)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dtos.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        publishedOn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'This is the published date for the post'})@IsISO8601()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dtos.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        schema\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'This is the schema for the post'})@IsOptional()@IsJSON()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dtos.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        slug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()@Matches(/^[a-z0-9]+(?:-[a-z0-9]+)*$/, {message: 'A slug should be all small letters and use hyphens'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dtos.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         postStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: postStatus, description: 'Possible values 'draft','review','published''})@IsEnum(postStatus)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dtos.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Array of tags passed as string values'})@IsOptional()@IsArray()@IsString({each: true})@MinLength(3, {each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dtos.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@MinLength(4)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dtos.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsArray,\n  IsEnum,\n  IsISO8601,\n  IsJSON,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  IsUrl,\n  Matches,\n  MinLength,\n  ValidateNested,\n} from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { postStatus } from '../enums/postStatus.enum';\nimport { postType } from '../enums/postType.enum';\nimport { CreateMetaOptionsDto } from './create-meta-Options.dtos';\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nexport class CreatePostDto {\n  @ApiProperty()\n  @IsString()\n  @MinLength(4)\n  @IsNotEmpty()\n  title: string;\n\n  @ApiProperty()\n  @IsEnum(postType)\n  @IsNotEmpty()\n  postType: postType;\n\n  @ApiProperty()\n  @IsString()\n  @IsNotEmpty()\n  @Matches(/^[a-z0-9]+(?:-[a-z0-9]+)*$/, {\n    message: 'A slug should be all small letters and use hyphens',\n  })\n  slug: string;\n\n  @ApiProperty({\n    enum: postStatus,\n    description: \"Possible values 'draft','review','published'\",\n  })\n  @IsEnum(postStatus)\n  @IsNotEmpty()\n  status: postStatus;\n\n  @ApiPropertyOptional({\n    description: 'This is the content for the post',\n  })\n  @IsString()\n  @IsOptional()\n  content?: string;\n\n  @ApiPropertyOptional({\n    description: 'This is the schema for the post',\n  })\n  @IsOptional()\n  @IsJSON()\n  schema?: string;\n\n  @ApiPropertyOptional({\n    description: 'This is featured image for the post',\n  })\n  @IsOptional()\n  @IsUrl()\n  featuredImageUrl?: string;\n\n  @ApiPropertyOptional({\n    description: 'This is the published date for the post',\n  })\n  @IsISO8601()\n  @IsOptional()\n  publishedOn?: Date;\n\n  @ApiPropertyOptional({\n    description: 'Array of tags passed as string values',\n  })\n  @IsOptional()\n  @IsArray()\n  @IsString({ each: true })\n  @MinLength(3, { each: true })\n  tags?: string[];\n\n  @ApiPropertyOptional({\n    type: 'array',\n    required: false,\n    items: {\n      type: 'object',\n      properties: {\n        key: {\n          type: 'string',\n          description:\n            'The Key can be any string identifier for your meta option',\n          example: 'sidebarEnabled',\n        },\n        value: {\n          type: 'any',\n          description: 'Any value you want to pass to the key',\n          example: 'sidebarEnabled',\n        },\n      },\n    },\n  })\n  @IsOptional()\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => CreateMetaOptionsDto)\n  metaOptions?: CreateMetaOptionsDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                firstName\n                            \n                            \n                                    \n                                    \n                                lastName\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsString } from 'class-validator';\nexport class CreateUserDto {\n  @IsString()\n  @IsNotEmpty()\n  firstName: string;\n\n  @IsString()\n  @IsNotEmpty()\n  lastName: string;\n\n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n\n  @IsString()\n  @IsNotEmpty()\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUsersParamDto.html":{"url":"classes/GetUsersParamDto.html","title":"class - GetUsersParamDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUsersParamDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/get-users-params.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Get user with a specific ID', example: 1})@IsOptional()@IsInt()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/get-users-params.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { IsInt, IsOptional } from 'class-validator';\n\nexport class GetUsersParamDto {\n  @ApiPropertyOptional({\n    description:\"Get user with a specific ID\",\n    example:1\n  })\n  @IsOptional()\n  @IsInt()\n  @Type(() => Number)\n  id?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchPostDto.html":{"url":"classes/PatchPostDto.html","title":"class - PatchPostDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchPostDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/dtos/patch-post.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreatePostDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The ID of the post that needs to be updated'})@IsInt()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/patch-post.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger'; \nimport { CreatePostDto } from './create-post.dtos';\nimport { IsInt, IsNotEmpty } from 'class-validator';\n\nexport class PatchPostDto extends PartialType(CreatePostDto) {\n  @ApiProperty({\n    description: 'The ID of the post that needs to be updated',\n  })\n  @IsInt()\n  @IsNotEmpty()\n  id: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchUserDto.html":{"url":"classes/PatchUserDto.html","title":"class - PatchUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/patch-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateUserDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateUserDto } from './create-user.dto';\nexport class PatchUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PostsController.html":{"url":"controllers/PostsController.html","title":"controller - PostsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PostsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/posts.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                posts\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                createPost\n                            \n                            \n                                    \n                                    Public\n                                getPosts\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                updatePost\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        createPost\n                        \n                    \n                \n            \n            \n                \n                        \n                    createPost(createPostDto: CreatePostDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Creates a new Blog Post'})@ApiResponse({status: 201, description: 'You get a 201 response if your post is created'})@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/posts/posts.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPostDto\n                                            \n                                                            CreatePostDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        getPosts\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPosts(userId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:userId?')\n                \n            \n\n                    \n                        \n                            Defined in src/posts/posts.controller.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        updatePost\n                        \n                    \n                \n            \n            \n                \n                        \n                    updatePost(patchPostsDto: PatchPostDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Updates an existing Blog post'})@ApiResponse({status: 200, description: 'You get a 200 response if the post is updated successfully'})@Patch()\n                \n            \n\n                    \n                        \n                            Defined in src/posts/posts.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                patchPostsDto\n                                            \n                                                            PatchPostDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Patch, Post } from '@nestjs/common';\nimport { PostsService } from './providers/posts.service';\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { CreatePostDto } from './dtos/create-post.dtos';\nimport { PatchPostDto } from './dtos/patch-post.dto';\n@Controller('posts')\n@ApiTags('Posts')\nexport class PostsController {\n  constructor(\n    /*dependecy injection*/\n    private readonly postService: PostsService,\n  ) {}\n\n  @Get('/:userId?')\n  public getPosts(@Param('userId') userId: string) {\n    return this.postService.findAll(userId);\n  }\n  @ApiOperation({\n    summary: 'Creates a new Blog Post',\n  })\n  @ApiResponse({\n    status: 201,\n    description: 'You get a 201 response if your post is created',\n  })\n  @Post()\n  public createPost(@Body() createPostDto: CreatePostDto) {\n    console.log(createPostDto);\n  }\n\n  @ApiOperation({\n    summary: 'Updates an existing Blog post',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'You get a 200 response if the post is updated successfully',\n  })\n  @Patch()\n  public updatePost(@Body() patchPostsDto: PatchPostDto) {\n    console.log(patchPostsDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PostsModule.html":{"url":"modules/PostsModule.html","title":"module - PostsModule","body":"\n                   \n\n\n\n\n    Modules\n    PostsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PostsModule\n\n\n\ncluster_PostsModule_imports\n\n\n\ncluster_PostsModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nPostsModule\n\nPostsModule\n\nPostsModule -->\n\nUsersModule->PostsModule\n\n\n\n\n\nPostsService\n\nPostsService\n\nPostsModule -->\n\nPostsService->PostsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/posts/posts.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PostsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PostsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PostsController } from './posts.controller';\nimport { PostsService } from './providers/posts.service';\nimport { UsersModule } from 'src/users/users.module';\n\n@Module({\n  controllers: [PostsController],\n  providers: [PostsService],\n  imports: [UsersModule],\n})\nexport class PostsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PostsService.html":{"url":"injectables/PostsService.html","title":"injectable - PostsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PostsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/providers/posts.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/posts/providers/posts.service.ts:5\n                            \n                        \n\n                \n                    \n                            injecting a user service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/posts/providers/posts.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     {}\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { UsersService } from 'src/users/providers/users.service';\n\n@Injectable()\nexport class PostsService {\n  /**injecting a user service */\n\n  constructor(private readonly usersService: UsersService) {}\n\n  public findAll(userId: string) {\n    const user = this.usersService.findOneById(userId);\n\n    return [\n      {\n        user: user,\n        title: 'test1',\n        content: 'content test1',\n      },\n      {\n        user: user,\n        title: 'test12',\n        content: 'content test2',\n      },\n    ];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                createUsers\n                            \n                            \n                                    \n                                    Public\n                                deleteUsers\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                getUsers\n                            \n                            \n                                    \n                                    Public\n                                patchUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        createUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUsers(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        deleteUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteUsers()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:64\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Public\n                        getUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUsers(getUserParamDto: GetUsersParamDto, limit: number, page: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id?')@ApiOperation({summary: 'Fetches a list of registered users on the Application'})@ApiResponse({status: 200, description: 'Users fetched successfully based on the query'})@ApiQuery({name: 'limit', type: 'number', required: false, description: 'The number of entries returned per query', example: 10})@ApiQuery({name: 'page', type: 'number', required: false, description: 'The position of the page that you want the API to return', example: 1})\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                getUserParamDto\n                                            \n                                                            GetUsersParamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        patchUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    patchUsers(patchUserDto: PatchUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                patchUserDto\n                                            \n                                                            PatchUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         PatchUserDto\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Delete,\n  Post,\n  Put,\n  Patch,\n  ParseIntPipe,\n  Param,\n  Query,\n  Body,\n  Headers,\n  DefaultValuePipe,\n  ValidationPipe,\n} from '@nestjs/common';\nimport { CreateUserDto } from './dtos/create-user.dto';\nimport { GetUsersParamDto } from './dtos/get-users-params.dto';\nimport { PatchUserDto } from './dtos/patch-user.dto';\nimport { UsersService } from './providers/users.service';\nimport { ApiOperation, ApiQuery, ApiResponse, ApiTags } from '@nestjs/swagger';\n@Controller('users')\n@ApiTags('Users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @Get('/:id?')\n  @ApiOperation({\n    summary:\"Fetches a list of registered users on the Application\"\n  })\n  @ApiResponse({\n    status:200,\n    description:\"Users fetched successfully based on the query\"\n  })\n  @ApiQuery({\n    name: 'limit',\n    type: 'number',\n    required: false,\n    description: 'The number of entries returned per query',\n    example: 10,\n  })\n  @ApiQuery({\n    name:'page',\n    type:\"number\",\n    required:false,\n    description:\"The position of the page that you want the API to return\",\n    example:1\n  })\n  public getUsers(\n    @Param() getUserParamDto: GetUsersParamDto,\n    @Query('limit', new DefaultValuePipe(10), ParseIntPipe) limit: number,\n    @Query('page', new DefaultValuePipe(1), ParseIntPipe) page: number,\n  ) {\n    return this.usersService.findAll(getUserParamDto, limit, page);\n  }\n\n  @Post()\n  public createUsers(@Body() createUserDto: CreateUserDto) {\n    console.log(createUserDto);\n\n    return 'You sent this post request';\n  }\n\n  @Delete()\n  public deleteUsers() {\n    return 'this Post has been deleted';\n  }\n\n  @Patch()\n  public patchUsers(@Body() patchUserDto: PatchUserDto) {\n    return patchUserDto;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, forwardRef} from '@nestjs/common';\nimport { UsersController } from './users.controller';\nimport { UsersService } from './providers/users.service';\nimport { AuthModule } from 'src/auth/auth.module';\n\n@Module({\n  controllers: [UsersController],\n  providers: [UsersService],\n  exports: [UsersService],\n  imports:[forwardRef(()=>AuthModule)]\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/providers/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                findAll\n                            \n                            \n                                    Public\n                                findOneById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/users/providers/users.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(getUserParamDto: GetUsersParamDto, limit: number, page: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:14\n                        \n                    \n\n\n            \n                \n                        The method to get all the users from the database\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                getUserParamDto\n                                            \n                                                            GetUsersParamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     {}\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:37\n                        \n                    \n\n\n            \n                \n                        Find a user using the Id of the User\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { id: number; firstName: string; email: string; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable,forwardRef,Inject } from '@nestjs/common';\nimport { GetUsersParamDto } from '../dtos/get-users-params.dto';\nimport { AuthService } from 'src/auth/providers/auth.service';\n@Injectable()\n/** class to connect users table and perform business operation*/\nexport class UsersService {\n\n  constructor(\n    @Inject(forwardRef(()=>AuthService))\n    private readonly authService:AuthService){}\n\n\n/**The method to get all the users from the database */\n  public findAll(\n    getUserParamDto: GetUsersParamDto,\n    limit: number,\n    page: number,\n  ) {\n    const isAuth = this.authService.isAuth()\n    console.log(isAuth)\n    // auth service\n        return [\n      {\n        firstName: 'Dennis',\n        email: 'ere',\n      },\n      {\n        firstName: 'Joshua',\n        email: 'Joshua@gmail.com',\n      },\n    ];\n  }\n\n \n  /**Find a user using the Id of the User */\n\n  public findOneById(id: string) {\n    return {\n      id: 232,\n      firstName: 'Alez',\n      email: 'alez@gmail.com',\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/providers/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/posts/dtos/create-meta-Options.dtos.ts\n            \n            class\n            CreateMetaOptionsDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/posts/dtos/create-post.dtos.ts\n            \n            class\n            CreatePostDto\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/posts/dtos/patch-post.dto.ts\n            \n            class\n            PatchPostDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/posts/posts.controller.ts\n            \n            controller\n            PostsController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/posts/providers/posts.service.ts\n            \n            injectable\n            PostsService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/users/dtos/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/dtos/get-users-params.dto.ts\n            \n            class\n            GetUsersParamDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/dtos/patch-user.dto.ts\n            \n            class\n            PatchUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/providers/users.service.ts\n            \n            injectable\n            UsersService\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @compodoc/compodoc : ^1.1.23\n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/mapped-types : ^2.0.5\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/swagger : ^7.3.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            postStatus   (src/.../postStatus.enum.ts)\n                        \n                        \n                            postType   (src/.../postType.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/posts/enums/postStatus.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        postStatus\n                    \n                \n                        \n                            \n                                 DRAFT\n                            \n                        \n                        \n                            \n                                Value : draft\n                            \n                        \n                        \n                            \n                                 SCHEDULED\n                            \n                        \n                        \n                            \n                                Value : scheduled\n                            \n                        \n                        \n                            \n                                 REVIEW\n                            \n                        \n                        \n                            \n                                Value : review\n                            \n                        \n                        \n                            \n                                 PUBLISHED\n                            \n                        \n                        \n                            \n                                Value : published\n                            \n                        \n            \n        \n\n    src/posts/enums/postType.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        postType\n                    \n                \n                        \n                            \n                                 POST\n                            \n                        \n                        \n                            \n                                Value : post\n                            \n                        \n                        \n                            \n                                 PAGE\n                            \n                        \n                        \n                            \n                                Value : page\n                            \n                        \n                        \n                            \n                                 STORY\n                            \n                        \n                        \n                            \n                                Value : story\n                            \n                        \n                        \n                            \n                                 SERIES\n                            \n                        \n                        \n                            \n                                Value : series\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\nExample :$ npm installCompile and run the project\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodRun tests\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PostsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_PostsModule\n\n\n\ncluster_PostsModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nPostsModule\n\nPostsModule\n\nAppModule -->\n\nPostsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nPostsModule -->\n\nUsersModule->PostsModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nPostsService\n\nPostsService\n\nPostsModule -->\n\nPostsService->PostsModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    6 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
